{"version":3,"file":"static/js/446.706f6d18.chunk.js","mappings":"iNACA,EAA0B,wBAA1B,EAAiE,6BAAjE,EAAuG,uBAAvG,EAAuI,uBAAvI,EAAyK,yBAAzK,EAA4M,wBAA5M,EAAoP,8B,SCKpP,EAJgB,SAACA,GACb,OAAO,gBAAKC,UAAWC,EAAU,SAAEF,EAAMG,SAC7C,E,UCOA,EAPmB,SAACH,GAChB,IAAII,EAAI,kBAAcJ,EAAMK,IAC5B,OAAO,gBAAKJ,UAAS,UAAKC,EAAQ,YAAIA,GAAW,UAC7C,UAAC,KAAO,CAACI,GAAIF,EAAMH,UAAW,SAAAM,GAAO,OAAIA,EAAQC,SAAWN,EAAWA,CAAQ,EAAC,WAC5E,gBAAKO,IAAG,UAAKT,EAAMU,OAASC,IAAI,YAAW,UAAIX,EAAMY,UAEjE,E,oBCRaC,EAAW,SAACb,GACrB,OACI,0BACI,+BAAaA,KAGzB,E,UCPac,EAA2BC,EAAAA,KAAaC,MAAM,CACvDC,eAAgBF,EAAAA,KACXG,IAAI,EAAG,cACPC,IAAI,IAAK,aACTC,SAAS,cCIZC,EAAO,qGAeR,OAfQ,8BACT,WACI,OACI,iBAAKpB,UAAWC,EAAU,WACtB,gBAAKD,UAAWC,EAAe,SAC1BoB,KAAKtB,MAAMuB,YAAYC,QACnBC,KAAI,SAAAC,GAAI,OAAI,SAAC,EAAU,CAACd,KAAMc,EAAKd,KAAMP,GAAIqB,EAAKrB,GAAkBK,MAAOgB,EAAKhB,OAArBgB,EAAKrB,GAAwB,OAEjG,iBAAKJ,UAAWC,EAAW,UACtBoB,KAAKtB,MAAMuB,YAAYI,SACnBF,KAAI,SAAAtB,GAAO,OAAI,SAAC,EAAO,CAACA,QAASA,EAAQwB,UAAexB,EAAQE,GAAK,KAC1E,SAACuB,EAAY,CAACC,WAAYP,KAAKtB,MAAM6B,kBAIrD,KAAC,EAfQ,CAASC,EAAAA,WAmBhBF,EAAe,SAAC5B,GAClB,OACI,SAAC,KAAM,CACH+B,cAAe,CAACd,eAAgB,IAChCe,iBAAkBlB,EAClBmB,SAAU,SAACC,EAAO,GACjB,IADkBC,EAAS,EAATA,UAClBnC,EAAM6B,WAAWK,EAAOjB,gBACzBkB,GACA,EAAE,UACF,UAAC,KAAI,YACG,SAAC,KAAK,CAACvB,KAAK,iBAAiBwB,GAAIvB,EAAUwB,YAAY,wBAC3D,SAAC,KAAY,CAACzB,KAAM,iBAAkB0B,UAAW,MAAOrC,UAAWC,KACnE,mBAAQqC,KAAK,SAAQ,sBAIrC,EAKA,I,oBC5BA,GAAeC,E,QAAAA,IAAQC,EAAAA,GAAkBC,EAAAA,EAAAA,KAbnB,SAACC,GACnB,MAAO,CACHpB,YAAaoB,EAAMpB,YAE3B,IACyB,SAACqB,GACtB,MAAO,CACHf,WAAY,SAAC1B,GACTyC,GAASC,EAAAA,EAAAA,GAAwB1C,GACrC,EAER,IAEA,CAAuFkB,E","sources":["webpack://my-app/./src/components/Dialogs/Dialog.module.css?7071","components/Dialogs/Message/Message.js","components/Dialogs/DialogItem/DialogItem.js","Common/FormControls/FormsControls.js","Common/utils/validators/messagesValidator.js","components/Dialogs/Dialogs.js","components/Dialogs/DialogsContainer.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialog_dialogs__sE34e\",\"dialogsItems\":\"Dialog_dialogsItems__weR5L\",\"active\":\"Dialog_active__pWdSC\",\"dialog\":\"Dialog_dialog__HSoj2\",\"messages\":\"Dialog_messages__D6DUz\",\"message\":\"Dialog_message__Roqd5\",\"requiredField\":\"Dialog_requiredField__WEzCq\"};","import s from \"../Dialog.module.css\"\r\n\r\nconst Message = (props) => {\r\n    return <div className={s.message}>{props.message}</div>\r\n}\r\n\r\nexport default Message","import s from \"../Dialog.module.css\"\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nconst DialogItem = (props) => {\r\n    let path = `/dialog/${props.id}`\r\n    return <div className={`${s.dialog} ${s.active}`}>\r\n        <NavLink to={path} className={navData => navData.isActive ? s.active : s.dialog}>\r\n            <img src={`${props.image}`} alt=\"picture\"/>{`${props.name}`}</NavLink>\r\n    </div>;\r\n}\r\nexport default DialogItem","import React from \"react\";\r\n\r\nexport const Textarea = (props) => {\r\n    return (\r\n        <div>\r\n            <textarea{...props}/>\r\n        </div>\r\n    )\r\n}","import * as Yup from 'yup';\r\nexport const MessagesValidationSchema = Yup.object().shape({\r\n    newMessageText: Yup.string()\r\n        .min(2, 'Too short!')\r\n        .max(500, 'Too long!')\r\n        .required('Required'),\r\n\r\n})","import s from \"./Dialog.module.css\"\r\nimport Message from \"./Message/Message\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport React from \"react\";\r\nimport {Navigate} from \"react-router-dom\";\r\nimport {Formik, Field, Form, ErrorMessage} from 'formik';\r\nimport {Textarea} from \"../../Common/FormControls/FormsControls\";\r\nimport {MessagesValidationSchema} from \"../../Common/utils/validators/messagesValidator\";\r\n\r\nclass Dialogs extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className={s.dialogs}>\r\n                <div className={s.dialogsItems}>\r\n                    {this.props.dialogsPage.dialogs\r\n                        .map(item => <DialogItem name={item.name} id={item.id} key={item.id} image={item.image}/>)}\r\n                </div>\r\n                <div className={s.messages}>\r\n                    {this.props.dialogsPage.messages\r\n                        .map(message => <Message message={message.messages} key={message.id}/>)}\r\n                    <MessagesForm addMessage={this.props.addMessage}/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst MessagesForm = (props) => {\r\n    return (\r\n        <Formik\r\n            initialValues={{newMessageText: \"\"}}\r\n            validationSchema={MessagesValidationSchema}\r\n            onSubmit={(values,{resetForm}) =>\r\n            {props.addMessage(values.newMessageText);\r\n            resetForm();\r\n            }}>\r\n            <Form>\r\n                    <Field name='newMessageText' as={Textarea} placeholder='Enter your message' />\r\n                <ErrorMessage name={'newMessageText'} component={'div'} className={s.requiredField}/>\r\n                <button type=\"submit\">Send</button>\r\n            </Form>\r\n        </Formik>\r\n    );\r\n};\r\n\r\n\r\n\r\n\r\nexport default Dialogs","import React from \"react\";\r\nimport {addMessageActionCreator} from \"../../Redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../HOC/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addMessage: (message) => {\r\n            dispatch(addMessageActionCreator(message));\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(withAuthRedirect, connect(mapStateToProps, mapDispatchToProps))(Dialogs)"],"names":["props","className","s","message","path","id","to","navData","isActive","src","image","alt","name","Textarea","MessagesValidationSchema","Yup","shape","newMessageText","min","max","required","Dialogs","this","dialogsPage","dialogs","map","item","messages","MessagesForm","addMessage","React","initialValues","validationSchema","onSubmit","values","resetForm","as","placeholder","component","type","compose","withAuthRedirect","connect","state","dispatch","addMessageActionCreator"],"sourceRoot":""}